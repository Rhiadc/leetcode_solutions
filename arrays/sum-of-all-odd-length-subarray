Given an array of positive integers arr, return the sum of all possible odd-length subarrays of arr.

A subarray is a contiguous subsequence of the array.

 

Example 1:
Input: arr = [1,4,2,5,3]
Output: 58
Explanation: The odd-length subarrays of arr and their sums are:
[1] = 1
[4] = 4
[2] = 2
[5] = 5
[3] = 3
[1,4,2] = 7
[4,2,5] = 11
[2,5,3] = 10
[1,4,2,5,3] = 15
If we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58
###############################################################################################################
Solution:
func sumOddLengthSubarrays(arr []int) int {
	totalLength := len(arr) / 2
	if len(arr)%2 == 1 {
		totalLength++
	}
	odd := make([]int, 0, totalLength)
	for i := 1; i <= len(arr); i++ {
		if i%2 == 0 {
			continue
		}
		odd = append(odd, i)
	}
	total := 0
	for i := 0; i < len(odd); i++ {
		for j := 0; j < len(arr); j++ {
			aux := 0
			for aux < odd[i] {
				total += arr[aux+j]
				aux++
			}
			if j+odd[i] >= len(arr) {
				break
			}
		}

	}
	return total
}