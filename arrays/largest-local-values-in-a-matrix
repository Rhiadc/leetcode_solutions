2373. Largest Local Values in a Matrix
Easy
519
54
Companies

You are given an n x n integer matrix grid.

Generate an integer matrix maxLocal of size (n - 2) x (n - 2) such that:

    maxLocal[i][j] is equal to the largest value of the 3 x 3 matrix in grid centered around row i + 1 and column j + 1.

In other words, we want to find the largest value in every contiguous 3 x 3 matrix in grid.

Return the generated matrix.

 

Example 1:

Input: grid = [[9,9,8,1],[5,6,2,6],[8,2,6,4],[6,2,2,2]]
Output: [[9,9],[8,6]]
Explanation: The diagram above shows the original matrix and the generated matrix.
Notice that each value in the generated matrix corresponds to the largest value of a contiguous 3 x 3 matrix in grid.

Example 2:

Input: grid = [[1,1,1,1,1],[1,1,1,1,1],[1,1,2,1,1],[1,1,1,1,1],[1,1,1,1,1]]
Output: [[2,2,2],[2,2,2],[2,2,2]]
Explanation: Notice that the 2 is contained within every contiguous 3 x 3 matrix in grid.
###############################################################################################################
Solution1:

func largestLocal(grid [][]int) [][]int {
	ret := make([][]int, 0, len(grid[0]))
	ref, maior := 3, 0

	for i := 0; i < len(grid[0]); i++ {
		k, aux, a, refa := i, 0, 0, 3
		retP := make([]int, 0)
		for k < ref {
			for a < refa {
				if grid[k][a] > maior {
					maior = grid[k][a]
				}
				a++
			}
			k++
			if refa+1 <= len(grid[0]) && k >= ref {
				retP = append(retP, maior)
				refa++
				aux++
				maior, k = 0, i
			}

			if k >= ref {
				retP = append(retP, maior)
				maior = 0
			}

			a = aux
		}
		ref++
		
		ret = append(ret, retP)
		if i+3 >= len(grid[0]) {
			return ret
		}
	}
	return ret
}

