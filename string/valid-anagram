Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: s = "anagram", t = "nagaram"
Output: true

Example 2:

Input: s = "rat", t = "car"
Output: false

###############################################################################################################
Solution1:

func isAnagram(s string, t string) bool {
    if len(s) != len(t) {
        return false
    }
    tt := make(map[byte]int)
    bb := make(map[byte]int)
	for k, _ := range s {
		tt[s[k]]++
		bb[t[k]]++

	}   
	return reflect.DeepEqual(tt, bb)
}


Solution2:

func isAnagram(s string, t string) bool {
    if len(s) != len(t) {
        return false
    }
    tt := make(map[byte]int)
	for k, _ := range s {
		tt[s[k]]++
	}   

    for k := range t {
        if _, ok := tt[t[k]]; !ok {
            return false
        }
        tt[t[k]]--
        if tt[t[k]] < 0 {
            return false
        }

    }
	return true
}
